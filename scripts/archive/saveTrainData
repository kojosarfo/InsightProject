#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Sep 25 12:23:02 2019

@author: kojosarfo
"""

from __future__ import print_function
import pickle
import numpy as np
import pandas as pd
    
filename = 'PedestriansData.sav'
Pedestrians = pickle.load(open(filename, 'rb'))

filename = 'CyclistsData.sav'
Cyclists = pickle.load(open(filename, 'rb'))

filename = 'Locations.sav'
Locations = pickle.load(open(filename, 'rb'))

# Training data ranges from 1 July to 31st July

trainStart1 = pd.to_datetime('2019-05-25 00:00:00');
trainEnd1 = pd.to_datetime('2019-05-31 23:00:00');

trainStart2 = pd.to_datetime('2019-06-15 00:00:00');
trainEnd2 = pd.to_datetime('2019-06-21 23:00:00');

trainStart3 = pd.to_datetime('2019-07-08 00:00:00');
trainEnd3 = pd.to_datetime('2019-07-14 23:00:00');

trainStart4 = pd.to_datetime('2019-08-01 00:00:00');
trainEnd4 = pd.to_datetime('2019-08-07 23:00:00');

trainStarts = [trainStart1, trainStart2, trainStart3, trainStart4];
trainEnds = [trainEnd1, trainEnd2, trainEnd3, trainEnd4]

allPeds = pd.DataFrame(columns=Pedestrians[0].columns)
allCycs = pd.DataFrame(columns=Cyclists[0].columns)
for idx in range(4):  
    
    trainStart = trainStarts[idx]; trainEnd = trainEnds[idx];
    
    for i in range(len(Pedestrians)-1):
        Peds = Pedestrians[i]
        T = Peds[trainStart:trainEnd]
        T['lat'] = np.ones([len(T),1])*Locations.iloc[i,0]
        T['lng'] = np.ones([len(T),1])*Locations.iloc[i,1]
        
        allPeds = pd.concat([allPeds, T])
        
        Cycs = Cyclists[i]
        T = Cycs[trainStart:trainEnd]
        T['lat'] = np.ones([len(T),1])*Locations.iloc[i,0]
        T['lng'] = np.ones([len(T),1])*Locations.iloc[i,1]
        
        allCycs = pd.concat([allCycs, T])


filename = 'stackedPeds.sav'
with open(filename, 'wb') as handle:
    pickle.dump(allPeds, handle)
    
filename = 'stackedCycs.sav'
with open(filename, 'wb') as handle:
    pickle.dump(allCycs, handle)
    


Peds = Pedestrians[14]
T = Peds[trainStart:trainEnd]
T['lat'] = np.ones([len(T),1])*Locations.iloc[i,0]
T['lng'] = np.ones([len(T),1])*Locations.iloc[i,1]

testIntPeds = pd.concat([allPeds, T])

Cycs = Cyclists[i]
T = Cycs[trainStart:trainEnd]
T['lat'] = np.ones([len(T),1])*Locations.iloc[i,0]
T['lng'] = np.ones([len(T),1])*Locations.iloc[i,1]

testIntCycs = pd.concat([allCycs, T])


#%% Validation set
Pedestrians, Cyclists, Locations = get_data()

xTestPeds = Pedestrians[13][['Hour','DayOfWeek','isHoliday','lat','lng']]

xTestCycs = Cyclists[13][['Hour','DayOfWeek','isHoliday','lat','lng']]